import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import React, { memo } from 'react';
import styles from './styles.module.scss';

var ItemRow = function ItemRow(_ref) {
  var _provided$draggablePr;

  var style = _ref.style,
      textField = _ref.textField,
      itemData = _ref.itemData,
      onItemClick = _ref.onItemClick,
      _ref$provided = _ref.provided,
      provided = _ref$provided === void 0 ? {} : _ref$provided,
      isDragging = _ref.isDragging;
  return /*#__PURE__*/React.createElement("div", Object.assign({
    ref: provided.innerRef
  }, provided.draggableProps, provided.dragHandleProps, {
    style: _objectSpread(_objectSpread({}, style), (_provided$draggablePr = provided.draggableProps) === null || _provided$draggablePr === void 0 ? void 0 : _provided$draggablePr.style),
    className: "".concat(styles.item, " ").concat(isDragging ? styles['is-dragging'] : ''),
    onClick: function onClick() {
      return onItemClick(itemData);
    }
  }), /*#__PURE__*/React.createElement("span", null, itemData && itemData[textField]));
};

export default memo(ItemRow);