{"ast":null,"code":"var _jsxFileName = \"/Users/sillysadsoy/Desktop/project-phase-4/client/src/Auth.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './components/Header';\nimport Search from './components/Search';\nimport NewBookForm from './components/NewBookForm';\nimport NewAuthorForm from './components/NewAuthorForm';\nimport BookList from './components/BookList';\nimport AuthorList from './components/AuthorList';\nimport BookDetails from './components/BookDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Auth({\n  currentUser,\n  setCurrentUser\n}) {\n  _s();\n\n  const history = useHistory();\n\n  const handleLogout = () => {\n    fetch(`/logout`, {\n      method: 'DELETE',\n      credentials: 'include'\n    }).then(res => {\n      if (res.ok) {\n        setCurrentUser(null);\n        history.push('/');\n      }\n    });\n  };\n\n  const [newBookInput, setNewBook] = useState({\n    title: '',\n    image_url: '',\n    isbn: '',\n    description: '',\n    publisher: '',\n    price: '',\n    author: []\n  });\n  const [newAuthorInput, setNewAuthor] = useState({\n    name: '',\n    image_url: '',\n    description: ''\n  });\n  const [booksList, setBooksList] = useState([]);\n  const [getAuthors, setGetAuthors] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:3000/authors\").then(response => response.json()).then(authorArr => setGet(authorArr));\n  }, [setNewAuthor, newAuthorInput, newBookInput]);\n  useEffect(() => {\n    fetch(`http://localhost:3000/books`).then(resp => resp.json()).then(books => setBooksList(books));\n  }, [setNewBook, newBookInput, newAuthorInput]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (e.target.id === 'newBookForm') {\n      fetch(`http://localhost:3000/books`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newBookInput)\n      }).then(resp => resp.json()).then(() => setNewBook({\n        title: '',\n        image_url: '',\n        isbn: '',\n        description: '',\n        publisher: '',\n        price: '',\n        author: []\n      }));\n    } else {\n      fetch(`http://localhost:3000/authors`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newAuthorInput)\n      }).then(resp => resp.json()).then(() => setNewAuthor({\n        name: '',\n        image_url: '',\n        description: ''\n      }));\n    }\n  }\n\n  ;\n  const filteredBooks = booksList.filter(book => (book.title || '').toLowerCase().includes(search.toLowerCase()));\n  const filteredAuthors = getAuthors.filter(author => (author.name || '').toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      setCurrentUser: setCurrentUser,\n      currentUser: currentUser,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/books/new\",\n        children: /*#__PURE__*/_jsxDEV(NewBookForm, {\n          newBookInput: newBookInput,\n          setNewBook: setNewBook,\n          handleSubmit: handleSubmit,\n          getAuthors: getAuthors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/books/:id\",\n        component: BookDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/authors/new\",\n        children: /*#__PURE__*/_jsxDEV(NewAuthorForm, {\n          newAuthorInput: newAuthorInput,\n          setNewAuthor: setNewAuthor,\n          handleSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/authors\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          search: search,\n          setSearch: setSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthorList, {\n          filteredAuthors: filteredAuthors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          search: search,\n          setSearch: setSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BookList, {\n          filteredBooks: filteredBooks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Auth, \"Bz4p70We5i2CHje8u4b+xXnc2Vc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/sillysadsoy/Desktop/project-phase-4/client/src/Auth.js"],"names":["useState","useEffect","Route","Switch","useHistory","Header","Search","NewBookForm","NewAuthorForm","BookList","AuthorList","BookDetails","Auth","currentUser","setCurrentUser","history","handleLogout","fetch","method","credentials","then","res","ok","push","newBookInput","setNewBook","title","image_url","isbn","description","publisher","price","author","newAuthorInput","setNewAuthor","name","booksList","setBooksList","getAuthors","setGetAuthors","search","setSearch","response","json","authorArr","setGet","resp","books","handleSubmit","e","preventDefault","target","id","headers","body","JSON","stringify","filteredBooks","filter","book","toLowerCase","includes","filteredAuthors"],"mappings":"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","sourcesContent":["import './App.css';\n\nimport { useState, useEffect } from 'react';\n\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport Header from './components/Header';\n\nimport Search from './components/Search';\n\nimport NewBookForm from './components/NewBookForm';\nimport NewAuthorForm from './components/NewAuthorForm';\n\nimport BookList from './components/BookList';\nimport AuthorList from './components/AuthorList';\nimport BookDetails from './components/BookDetails';\n\nfunction Auth({ currentUser, setCurrentUser }) {\n\n  const history = useHistory();\n\n  const handleLogout = () => {\n    fetch(`/logout`, {\n      method: 'DELETE',\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          setCurrentUser(null)\n          history.push('/')\n        }\n      })\n  };\n\n  const [newBookInput, setNewBook] = useState(\n    {title: '', image_url: '', isbn: '', description: '', publisher: '', price: '', author: []}\n    );\n\n  const [newAuthorInput, setNewAuthor] = useState(\n    {name: '', image_url: '', description: ''}\n    );\n\n  const [booksList, setBooksList] = useState([]);\n\n  const [getAuthors, setGetAuthors] = useState([]);\n\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/authors\")\n    .then(response => response.json())\n    .then(authorArr => setGet(authorArr))\n    }, [setNewAuthor, newAuthorInput, newBookInput])\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/books`)\n    .then(resp => resp.json())\n    .then(books => setBooksList(books))\n  },[setNewBook, newBookInput, newAuthorInput]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if(e.target.id === 'newBookForm')\n    {fetch(`http://localhost:3000/books`, {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(newBookInput)})\n      .then(resp => resp.json())\n      .then(() => setNewBook({title: '', image_url: '', isbn: '', description: '', publisher: '', price: '', author: []}))\n    }\n    else\n    {fetch(`http://localhost:3000/authors`, {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(newAuthorInput)})\n      .then(resp => resp.json())\n      .then(() => setNewAuthor({name: '', image_url: '', description: ''}))\n    }\n  };\n\n  const filteredBooks = booksList.filter(book => (book.title||'').toLowerCase().includes(search.toLowerCase()));\n\n  const filteredAuthors = getAuthors.filter(author => (author.name||'').toLowerCase().includes(search.toLowerCase()));\n\n\n  return (\n    <div className=\"App\">\n\n      <Header setCurrentUser={setCurrentUser}\n              currentUser={currentUser}\n              handleLogout={handleLogout}/>\n\n      {/* <Search search={search} setSearch={setSearch}/> */}\n\n      <Switch>\n\n        <Route path='/books/new'>\n          <NewBookForm newBookInput={newBookInput}\n                      setNewBook={setNewBook}\n                      handleSubmit={handleSubmit}\n                      getAuthors={getAuthors} />\n        </Route>\n\n        <Route path='/books/:id' component={BookDetails} />\n\n        <Route path='/authors/new'>\n          <NewAuthorForm newAuthorInput={newAuthorInput}\n                      setNewAuthor={setNewAuthor}\n                      handleSubmit={handleSubmit} />\n        </Route>\n\n        <Route path='/authors'>\n          <Search search={search} setSearch={setSearch}/>\n          <AuthorList filteredAuthors={filteredAuthors}/>\n        </Route>\n\n        <Route path='/'>\n          <Search search={search} setSearch={setSearch}/>\n          <BookList filteredBooks={filteredBooks}/>\n        </Route>\n\n      </Switch>\n\n    </div>\n  );\n}\nexport default Auth;"]},"metadata":{},"sourceType":"module"}