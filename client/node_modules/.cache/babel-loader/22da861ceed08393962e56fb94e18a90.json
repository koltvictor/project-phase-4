{"ast":null,"code":"var _jsxFileName = \"/Users/sillysadsoy/Desktop/project-phase-4/client/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport Search from './Search';\nimport NewBookForm from './NewBookForm';\nimport NewAuthorForm from './NewAuthorForm';\nimport BookList from './BookList';\nimport AuthorList from './AuthorList';\nimport BookDetails from './BookDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [newBookInput, setNewBook] = useState({\n    title: '',\n    image: '',\n    isbn: '',\n    desc: '',\n    publisher: '',\n    author: []\n  });\n  const [newAuthorInput, setNewAuthor] = useState({\n    name: '',\n    image: '',\n    desc: ''\n  });\n  const [booksList, setBooksList] = useState([]);\n  const [getAuthors, setGetAuthors] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:3000/authors\").then(response => response.json()).then(authorArr => setGetAuthors(authorArr));\n  }, [setNewAuthor, newAuthorInput, newBookInput]);\n  useEffect(() => {\n    fetch(`http://localhost:3000/books`).then(resp => resp.json()).then(books => setBooksList(books));\n  }, [setNewBook, newBookInput, newAuthorInput]);\n  useEffect(() => {\n    fetch(`http://localhost:3000/books`).then(resp => resp.json()).then(books => console.log(books));\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (e.target.id === 'newBookForm') {\n      fetch(`http://localhost:3000/books`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newBookInput)\n      }).then(resp => resp.json()).then(() => setNewBook({\n        title: '',\n        image: '',\n        isbn: '',\n        desc: '',\n        publisher: '',\n        author: ''\n      }));\n    } else {\n      fetch(`http://localhost:3000/books`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newAuthorInput)\n      }).then(resp => resp.json()).then(() => setNewAuthor({\n        name: '',\n        image: '',\n        desc: ''\n      }));\n    }\n  }\n\n  const filteredBooks = booksList.filter(book => book.title.toLowerCase().includes(search.toLowerCase()));\n  const filteredAuthors = getAuthors.filter(author => author.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/books/new\",\n        children: /*#__PURE__*/_jsxDEV(NewBookForm, {\n          newBookInput: newBookInput,\n          setNewBook: setNewBook,\n          handleSubmit: handleSubmit,\n          getAuthors: getAuthors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/books/:id\",\n        component: BookDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/authors/new\",\n        children: /*#__PURE__*/_jsxDEV(NewAuthorForm, {\n          newAuthorInput: newAuthorInput,\n          setNewAuthor: setNewAuthor,\n          handleSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/authors\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          search: search,\n          setSearch: setSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthorList, {\n          filteredAuthors: filteredAuthors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          search: search,\n          setSearch: setSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BookList, {\n          filteredBooks: filteredBooks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xl1ZDJqNu6IXlSqFK/gy/edmM7I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sillysadsoy/Desktop/project-phase-4/client/src/components/App.js"],"names":["useState","useEffect","Route","Switch","Header","Search","NewBookForm","NewAuthorForm","BookList","AuthorList","BookDetails","App","currentUser","setCurrentUser","newBookInput","setNewBook","title","image","isbn","desc","publisher","author","newAuthorInput","setNewAuthor","name","booksList","setBooksList","getAuthors","setGetAuthors","search","setSearch","fetch","then","response","json","authorArr","resp","books","console","log","handleSubmit","e","preventDefault","target","id","method","headers","body","JSON","stringify","filteredBooks","filter","book","toLowerCase","includes","filteredAuthors"],"mappings":"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","sourcesContent":["import './App.css';\n\nimport { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from './Header';\nimport Search from './Search';\n\nimport NewBookForm from './NewBookForm';\nimport NewAuthorForm from './NewAuthorForm';\n\nimport BookList from './BookList';\nimport AuthorList from './AuthorList';\nimport BookDetails from './BookDetails';\n\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState(null)\n\n  const [newBookInput, setNewBook] = useState(\n    {title: '', image: '', isbn: '', desc: '', publisher: '', author: []}\n    );\n\n  const [newAuthorInput, setNewAuthor] = useState(\n    {name: '', image: '', desc: ''}\n    );\n\n  const [booksList, setBooksList] = useState([]);\n\n  const [getAuthors, setGetAuthors] = useState([]);\n\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/authors\")\n    .then(response => response.json())\n    .then(authorArr => setGetAuthors(authorArr))\n    }, [setNewAuthor, newAuthorInput, newBookInput])\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/books`)\n    .then(resp => resp.json())\n    .then(books => setBooksList(books))\n  },[setNewBook, newBookInput, newAuthorInput]);\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/books`)\n    .then(resp => resp.json())\n    .then(books => console.log(books));})\n\n  function handleSubmit(e) {\n\n    e.preventDefault();\n\n    if(e.target.id === 'newBookForm') \n    {fetch(`http://localhost:3000/books`, {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(newBookInput)})\n      .then(resp => resp.json())\n      .then(() => setNewBook({title: '', image: '', isbn: '', desc: '', publisher: '', author: ''}))\n    }\n    else \n    {fetch(`http://localhost:3000/books`, {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(newAuthorInput)})\n      .then(resp => resp.json())\n      .then(() => setNewAuthor({name: '', image: '', desc: ''}))\n    }\n  }\n\n  const filteredBooks =  booksList.filter(book => book.title.toLowerCase().includes(search.toLowerCase()))\n  const filteredAuthors =  getAuthors.filter(author => author.name.toLowerCase().includes(search.toLowerCase()))\n\n  return (\n    <div className=\"App\">\n\n      <Header />\n      {/* <Search search={search} setSearch={setSearch}/> */}\n\n      <Switch>\n\n        <Route path='/books/new'>\n          <NewBookForm newBookInput={newBookInput}\n                      setNewBook={setNewBook}\n                      handleSubmit={handleSubmit}\n                      getAuthors={getAuthors} />\n        </Route>\n\n        <Route path='/books/:id' component={BookDetails} />\n\n        <Route path='/authors/new'>\n          <NewAuthorForm newAuthorInput={newAuthorInput}\n                      setNewAuthor={setNewAuthor}\n                      handleSubmit={handleSubmit} />\n        </Route>\n\n        <Route path='/authors'>\n          <Search search={search} setSearch={setSearch}/>\n          <AuthorList filteredAuthors={filteredAuthors}/>\n        </Route>\n\n        <Route path='/'>\n          <Search search={search} setSearch={setSearch}/>\n          <BookList filteredBooks={filteredBooks}/>\n        </Route>\n\n      </Switch>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}